-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module PlaceholderApi.Mutation exposing (..)

import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode exposing (Decoder)
import PlaceholderApi.InputObject
import PlaceholderApi.Interface
import PlaceholderApi.Object
import PlaceholderApi.Scalar
import PlaceholderApi.ScalarCodecs
import PlaceholderApi.Union


underscore_ : SelectionSet (Maybe Int) RootMutation
underscore_ =
    Object.selectionForField "(Maybe Int)" "_" [] (Decode.int |> Decode.nullable)


type alias CreateAlbumRequiredArguments =
    { input : PlaceholderApi.InputObject.CreateAlbumInput }


createAlbum :
    CreateAlbumRequiredArguments
    -> SelectionSet decodesTo PlaceholderApi.Object.Album
    -> SelectionSet (Maybe decodesTo) RootMutation
createAlbum requiredArgs____ object____ =
    Object.selectionForCompositeField "createAlbum" [ Argument.required "input" requiredArgs____.input PlaceholderApi.InputObject.encodeCreateAlbumInput ] object____ (Basics.identity >> Decode.nullable)


type alias UpdateAlbumRequiredArguments =
    { id : PlaceholderApi.ScalarCodecs.Id
    , input : PlaceholderApi.InputObject.UpdateAlbumInput
    }


updateAlbum :
    UpdateAlbumRequiredArguments
    -> SelectionSet decodesTo PlaceholderApi.Object.Album
    -> SelectionSet (Maybe decodesTo) RootMutation
updateAlbum requiredArgs____ object____ =
    Object.selectionForCompositeField "updateAlbum" [ Argument.required "id" requiredArgs____.id (PlaceholderApi.ScalarCodecs.codecs |> PlaceholderApi.Scalar.unwrapEncoder .codecId), Argument.required "input" requiredArgs____.input PlaceholderApi.InputObject.encodeUpdateAlbumInput ] object____ (Basics.identity >> Decode.nullable)


type alias DeleteAlbumRequiredArguments =
    { id : PlaceholderApi.ScalarCodecs.Id }


deleteAlbum :
    DeleteAlbumRequiredArguments
    -> SelectionSet (Maybe Bool) RootMutation
deleteAlbum requiredArgs____ =
    Object.selectionForField "(Maybe Bool)" "deleteAlbum" [ Argument.required "id" requiredArgs____.id (PlaceholderApi.ScalarCodecs.codecs |> PlaceholderApi.Scalar.unwrapEncoder .codecId) ] (Decode.bool |> Decode.nullable)


type alias CreateCommentRequiredArguments =
    { input : PlaceholderApi.InputObject.CreateCommentInput }


createComment :
    CreateCommentRequiredArguments
    -> SelectionSet decodesTo PlaceholderApi.Object.Comment
    -> SelectionSet (Maybe decodesTo) RootMutation
createComment requiredArgs____ object____ =
    Object.selectionForCompositeField "createComment" [ Argument.required "input" requiredArgs____.input PlaceholderApi.InputObject.encodeCreateCommentInput ] object____ (Basics.identity >> Decode.nullable)


type alias UpdateCommentRequiredArguments =
    { id : PlaceholderApi.ScalarCodecs.Id
    , input : PlaceholderApi.InputObject.UpdateCommentInput
    }


updateComment :
    UpdateCommentRequiredArguments
    -> SelectionSet decodesTo PlaceholderApi.Object.Comment
    -> SelectionSet (Maybe decodesTo) RootMutation
updateComment requiredArgs____ object____ =
    Object.selectionForCompositeField "updateComment" [ Argument.required "id" requiredArgs____.id (PlaceholderApi.ScalarCodecs.codecs |> PlaceholderApi.Scalar.unwrapEncoder .codecId), Argument.required "input" requiredArgs____.input PlaceholderApi.InputObject.encodeUpdateCommentInput ] object____ (Basics.identity >> Decode.nullable)


type alias DeleteCommentRequiredArguments =
    { id : PlaceholderApi.ScalarCodecs.Id }


deleteComment :
    DeleteCommentRequiredArguments
    -> SelectionSet (Maybe Bool) RootMutation
deleteComment requiredArgs____ =
    Object.selectionForField "(Maybe Bool)" "deleteComment" [ Argument.required "id" requiredArgs____.id (PlaceholderApi.ScalarCodecs.codecs |> PlaceholderApi.Scalar.unwrapEncoder .codecId) ] (Decode.bool |> Decode.nullable)


type alias CreatePhotoRequiredArguments =
    { input : PlaceholderApi.InputObject.CreatePhotoInput }


createPhoto :
    CreatePhotoRequiredArguments
    -> SelectionSet decodesTo PlaceholderApi.Object.Photo
    -> SelectionSet (Maybe decodesTo) RootMutation
createPhoto requiredArgs____ object____ =
    Object.selectionForCompositeField "createPhoto" [ Argument.required "input" requiredArgs____.input PlaceholderApi.InputObject.encodeCreatePhotoInput ] object____ (Basics.identity >> Decode.nullable)


type alias UpdatePhotoRequiredArguments =
    { id : PlaceholderApi.ScalarCodecs.Id
    , input : PlaceholderApi.InputObject.UpdatePhotoInput
    }


updatePhoto :
    UpdatePhotoRequiredArguments
    -> SelectionSet decodesTo PlaceholderApi.Object.Photo
    -> SelectionSet (Maybe decodesTo) RootMutation
updatePhoto requiredArgs____ object____ =
    Object.selectionForCompositeField "updatePhoto" [ Argument.required "id" requiredArgs____.id (PlaceholderApi.ScalarCodecs.codecs |> PlaceholderApi.Scalar.unwrapEncoder .codecId), Argument.required "input" requiredArgs____.input PlaceholderApi.InputObject.encodeUpdatePhotoInput ] object____ (Basics.identity >> Decode.nullable)


type alias DeletePhotoRequiredArguments =
    { id : PlaceholderApi.ScalarCodecs.Id }


deletePhoto :
    DeletePhotoRequiredArguments
    -> SelectionSet (Maybe Bool) RootMutation
deletePhoto requiredArgs____ =
    Object.selectionForField "(Maybe Bool)" "deletePhoto" [ Argument.required "id" requiredArgs____.id (PlaceholderApi.ScalarCodecs.codecs |> PlaceholderApi.Scalar.unwrapEncoder .codecId) ] (Decode.bool |> Decode.nullable)


type alias CreatePostRequiredArguments =
    { input : PlaceholderApi.InputObject.CreatePostInput }


createPost :
    CreatePostRequiredArguments
    -> SelectionSet decodesTo PlaceholderApi.Object.Post
    -> SelectionSet (Maybe decodesTo) RootMutation
createPost requiredArgs____ object____ =
    Object.selectionForCompositeField "createPost" [ Argument.required "input" requiredArgs____.input PlaceholderApi.InputObject.encodeCreatePostInput ] object____ (Basics.identity >> Decode.nullable)


type alias UpdatePostRequiredArguments =
    { id : PlaceholderApi.ScalarCodecs.Id
    , input : PlaceholderApi.InputObject.UpdatePostInput
    }


updatePost :
    UpdatePostRequiredArguments
    -> SelectionSet decodesTo PlaceholderApi.Object.Post
    -> SelectionSet (Maybe decodesTo) RootMutation
updatePost requiredArgs____ object____ =
    Object.selectionForCompositeField "updatePost" [ Argument.required "id" requiredArgs____.id (PlaceholderApi.ScalarCodecs.codecs |> PlaceholderApi.Scalar.unwrapEncoder .codecId), Argument.required "input" requiredArgs____.input PlaceholderApi.InputObject.encodeUpdatePostInput ] object____ (Basics.identity >> Decode.nullable)


type alias DeletePostRequiredArguments =
    { id : PlaceholderApi.ScalarCodecs.Id }


deletePost :
    DeletePostRequiredArguments
    -> SelectionSet (Maybe Bool) RootMutation
deletePost requiredArgs____ =
    Object.selectionForField "(Maybe Bool)" "deletePost" [ Argument.required "id" requiredArgs____.id (PlaceholderApi.ScalarCodecs.codecs |> PlaceholderApi.Scalar.unwrapEncoder .codecId) ] (Decode.bool |> Decode.nullable)


type alias CreateTodoRequiredArguments =
    { input : PlaceholderApi.InputObject.CreateTodoInput }


createTodo :
    CreateTodoRequiredArguments
    -> SelectionSet decodesTo PlaceholderApi.Object.Todo
    -> SelectionSet (Maybe decodesTo) RootMutation
createTodo requiredArgs____ object____ =
    Object.selectionForCompositeField "createTodo" [ Argument.required "input" requiredArgs____.input PlaceholderApi.InputObject.encodeCreateTodoInput ] object____ (Basics.identity >> Decode.nullable)


type alias UpdateTodoRequiredArguments =
    { id : PlaceholderApi.ScalarCodecs.Id
    , input : PlaceholderApi.InputObject.UpdateTodoInput
    }


updateTodo :
    UpdateTodoRequiredArguments
    -> SelectionSet decodesTo PlaceholderApi.Object.Todo
    -> SelectionSet (Maybe decodesTo) RootMutation
updateTodo requiredArgs____ object____ =
    Object.selectionForCompositeField "updateTodo" [ Argument.required "id" requiredArgs____.id (PlaceholderApi.ScalarCodecs.codecs |> PlaceholderApi.Scalar.unwrapEncoder .codecId), Argument.required "input" requiredArgs____.input PlaceholderApi.InputObject.encodeUpdateTodoInput ] object____ (Basics.identity >> Decode.nullable)


type alias DeleteTodoRequiredArguments =
    { id : PlaceholderApi.ScalarCodecs.Id }


deleteTodo :
    DeleteTodoRequiredArguments
    -> SelectionSet (Maybe Bool) RootMutation
deleteTodo requiredArgs____ =
    Object.selectionForField "(Maybe Bool)" "deleteTodo" [ Argument.required "id" requiredArgs____.id (PlaceholderApi.ScalarCodecs.codecs |> PlaceholderApi.Scalar.unwrapEncoder .codecId) ] (Decode.bool |> Decode.nullable)


type alias CreateUserRequiredArguments =
    { input : PlaceholderApi.InputObject.CreateUserInput }


createUser :
    CreateUserRequiredArguments
    -> SelectionSet decodesTo PlaceholderApi.Object.User
    -> SelectionSet (Maybe decodesTo) RootMutation
createUser requiredArgs____ object____ =
    Object.selectionForCompositeField "createUser" [ Argument.required "input" requiredArgs____.input PlaceholderApi.InputObject.encodeCreateUserInput ] object____ (Basics.identity >> Decode.nullable)


type alias UpdateUserRequiredArguments =
    { id : PlaceholderApi.ScalarCodecs.Id
    , input : PlaceholderApi.InputObject.UpdateUserInput
    }


updateUser :
    UpdateUserRequiredArguments
    -> SelectionSet decodesTo PlaceholderApi.Object.User
    -> SelectionSet (Maybe decodesTo) RootMutation
updateUser requiredArgs____ object____ =
    Object.selectionForCompositeField "updateUser" [ Argument.required "id" requiredArgs____.id (PlaceholderApi.ScalarCodecs.codecs |> PlaceholderApi.Scalar.unwrapEncoder .codecId), Argument.required "input" requiredArgs____.input PlaceholderApi.InputObject.encodeUpdateUserInput ] object____ (Basics.identity >> Decode.nullable)


type alias DeleteUserRequiredArguments =
    { id : PlaceholderApi.ScalarCodecs.Id }


deleteUser :
    DeleteUserRequiredArguments
    -> SelectionSet (Maybe Bool) RootMutation
deleteUser requiredArgs____ =
    Object.selectionForField "(Maybe Bool)" "deleteUser" [ Argument.required "id" requiredArgs____.id (PlaceholderApi.ScalarCodecs.codecs |> PlaceholderApi.Scalar.unwrapEncoder .codecId) ] (Decode.bool |> Decode.nullable)
