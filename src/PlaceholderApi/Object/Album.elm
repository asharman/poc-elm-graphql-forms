-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module PlaceholderApi.Object.Album exposing (..)

import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode
import PlaceholderApi.InputObject
import PlaceholderApi.Interface
import PlaceholderApi.Object
import PlaceholderApi.Scalar
import PlaceholderApi.ScalarCodecs
import PlaceholderApi.Union


id : SelectionSet (Maybe PlaceholderApi.ScalarCodecs.Id) PlaceholderApi.Object.Album
id =
    Object.selectionForField "(Maybe ScalarCodecs.Id)" "id" [] (PlaceholderApi.ScalarCodecs.codecs |> PlaceholderApi.Scalar.unwrapCodecs |> .codecId |> .decoder |> Decode.nullable)


title : SelectionSet (Maybe String) PlaceholderApi.Object.Album
title =
    Object.selectionForField "(Maybe String)" "title" [] (Decode.string |> Decode.nullable)


user :
    SelectionSet decodesTo PlaceholderApi.Object.User
    -> SelectionSet (Maybe decodesTo) PlaceholderApi.Object.Album
user object____ =
    Object.selectionForCompositeField "user" [] object____ (Basics.identity >> Decode.nullable)


type alias PhotosOptionalArguments =
    { options : OptionalArgument PlaceholderApi.InputObject.PageQueryOptions }


photos :
    (PhotosOptionalArguments -> PhotosOptionalArguments)
    -> SelectionSet decodesTo PlaceholderApi.Object.PhotosPage
    -> SelectionSet (Maybe decodesTo) PlaceholderApi.Object.Album
photos fillInOptionals____ object____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { options = Absent }

        optionalArgs____ =
            [ Argument.optional "options" filledInOptionals____.options PlaceholderApi.InputObject.encodePageQueryOptions ]
                |> List.filterMap Basics.identity
    in
    Object.selectionForCompositeField "photos" optionalArgs____ object____ (Basics.identity >> Decode.nullable)
